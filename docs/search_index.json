[["index.html", "Leadership for Informatics Cancer Research About this Course", " Leadership for Informatics Cancer Research 2021-06-09 About this Course This course is part of a series of courses for the Informatics Technology for Cancer Research (ITCR) called the Informatics Technology for Cancer Research Education Resource. This material was created by the ITCR Training Network (ITN) which is a collaborative effort of researchers around the United States to support cancer informatics and data science training through resources, technology, and events. This initiative is funded by the following grant: National Cancer Institute (NCI) UE5 CA254170. Our courses feature tools developed by ITCR Investigators and make it easier for principal investigators, scientists, and analysts to integrate cancer informatics into their workflows. Please see our website at www.itcrtraining.org for more information. "],["introduction.html", "Chapter 1 Introduction 1.1 Motivation 1.2 Informatics teams challenges 1.3 Meet the team!", " Chapter 1 Introduction 1.1 Motivation Informatics research often requires multidisciplinary teams. This requires more flexibility to communicate with team members with distinct backgrounds. Furthermore, team members often have different research and career goals. This can present unique challenges in making sure that everyone is on the same page and cohesively working together. This course aims to provide research leaders with guidance about: How to effectively lead team members on informatics projects How to perform informatics projects well Target Audience: The course is intended for researchers who lead research teams or collaborate with others to perform multidisciplinary work. We have especially aimed the material for those with moderate to no computational experience who may lead or collaborate with informatics experts, however this material is also applicable to informatics experts working with others who have less computational experience. Curriculum: We will provide you with an awareness for the specific challenges that your informatics collaborators, employees, and mentees might face, as well as ways to mitigate these challenges. By creating a better work environment for your informatics research team, you will ultimately improve the potential impact of your work. We will also discuss the major pitfalls of informatics research and discuss best practices for performing informatics research correctly and well, so that you can get the most out of your informatics projects. 1.2 Informatics teams challenges Informatics work presents unique challenges due to the fact that it requires multidisciplinary teams. According to a recent article about this subject: “Computational biology hinges on mutual respect between researchers from different disciplines, and a key element of respect is undertand a colleague’s particular expertise.” [carpenter_cultivating_2021] In this course we hope to give you a bit more of an understanding of the variety of perspectives that your collgagues might have. 1.3 Meet the team! In order to familiarize you with guidelines for how to make the most out of your informatics projects we are going to introduce you to some characters of the type of people you may encounter on your journey. We are going to show these characters in situations that may be similar to what you might experience. We are doing this to make the lessons concrete and to try to make the experience more entertaining and experiential. First our fearless lab leaders who lead informatics research projects. We have Sally who is experienced with working with team members from many disciplines including informatics experts. She helps guide her lab through successful projects all the time. Next, we have Charlie. He is new to informatics research and could learn a bit about how to work with informatics experts more effectively. Now we have our informaticists. First is Jack, who is often forgotten and misunderstood by his lab leader. His lab leader does not really know what he does, how long it takes, or how to support Jack and his career goals. This is unfortunately impeding Jack from achieving the career that he could have and from producing the good work that he is capable of. We also have Hilda, an example of a happy informaticist. She feels supported in all the ways that she needs, allowing her to be as productive and helpful as possible. Here is Francis the frustrated collaborator. She often feels misunderstood by her colleagues. They seem to think her work is easy and should be done faster and they often don’t discuss important aspects about the project until she needs to redo work. Thus, she is reasonable frustrated. Finally we have Harry, the helpful collaborator. He clearly communicates with his collaborators and is well organized! He teaches is collaborators about informatics and they teach him about their knowledge. He and his collaborators have very productive projects. We will now describe some guidelines for how to be an effective leader, collaborator and mentor on informatics projects so that you can be more like Sally with mentees and employees like Hilda and collaborators like Harry. Keep in mind that while our cartoons often exaggerate situations to make them more comical, more subtle situations can still be very detrimental to your research teammates. "],["guidelines-for-multidisciplinary-informatics-teams.html", "Chapter 2 Guidelines for multidisciplinary informatics teams 2.1 Finding and creating informatics teams 2.2 Communication for informatics teams 2.3 Record Keeping Practices 2.4 Leadership best practices", " Chapter 2 Guidelines for multidisciplinary informatics teams In this lesson we will discuss general guidelines for how to create and maintain healthy relationships within a multidisciplinary informatics research team. 2.1 Finding and creating informatics teams The first step to performing a good research study is to find the right people for your research team. In this section we will provide a guide for finding good coworkers, whether they are mentees, collaborators, or employees, to work on informatics cancer projects particularly for multidisciplinary teams. This section is based on blog posts Peng (2011) from Roger Peng and Matsui (2013) from Elizabeth C. Matsui of the simply statistics blog which has many other useful discussions and resources. 2.1.1 Start early The key to a successful multidisciplinary project is to start looking for your research teammates early. If you plan to collaborate with an expert, we suggest that you find such collaborators and discuss your plans before you even finish designing your studies. If you are new to informatics and you plan to employ or mentor informatics experts in your lab, we also suggest that you seek guidance from an informatics expert before you start an informatics project. 2.1.2 Who to look for Especially for projects with multidisciplinary teams, good communication is vital. Look for people who are easy to talk to. In Roger’s words: “If you dont feel comfortable asking (stupid) questions, pointing out problems, or making suggestions, then chances are the science will not be as good as it could be.” 2.1.3 Adjust your expectations Be careful about assuming that your experimental collaborator can do any type of wet bench experiment or that your informatics collaborator can analyze any type of data. Computational biology hinges on mutual respect between researchers from different disciplines, and a key element of respect is understanding a colleague’s particular expertise. (Carpenter et al. 2021) Computationalists do not like to be seen as “just” running the numbers any more than biologists appreciate the perception that they are “just” a pair of hands that produced the data. (Carpenter et al. 2021) Statistics, database structures, clinical informatics, genetics, epigenetics, genomics, imaging, single-cell technologies, structure prediction, algorithm development, machine learning, and mechanistic modeling are all distinct fields. Biologists should not be offended if a particular collaboration idea does not fit a computational biologist’s research agenda or expertise…a computational biologist’s research laboratory often must focus on novel methods development in a particular area for career advancement. (Carpenter et al. 2021) 2.2 Communication for informatics teams Communication is vital for all good work relationships, but especially in a multidisciplinary team. Here are a few tips for keeping communication smooth. This section is based on Broman (2019) by Karl Broman and Wang (2019) by Jiangxia Wang. 2.2.1 Talk first OK, so we kinda covered this, but we can’t emphasize it enough. We suggest that you start talking to your collaborators, students, or employees before you even begin a project, so that you can plan the project in the optimal way. This is critical for forming the right informatically feasible and scientifically useful questions and for collecting the right data to address such questions. Collecting the right data can be vital to the success of a project. It may not always be obvious what is possible for the experimental biologists to create samples. Is 30 samples actually feasible? How about 300? Would that be performed in different batches? What is necessary or possible for an informatics project to be able to test certain questions with statistical methods? How long would certain analyses take? These are discussions that should happen long before reagents are purchased, before IRB submissions, and before grant submissions if possible. 2.2.2 Take your time For employees and mentees, allow time to get comfortable talking to one another. As a leader, take the lead in openly expressing areas that are new to you and facilitate an environment where teammates communicate respect for one another’s unique knowledge and perspectives. In all cases (with collaborators, employees, and mentees), build in extra time for projects to allow for teaching time. You can teach them about your domain and they can teach you about theirs. This may feel like it is taking extra time but it will ultimately pay off in the end, as you will better be able to work as a team to ask the most useful and testable hypotheses. 2.2.3 Come up with questions/hypotheses together Not knowing what may be feasible in terms of data collection and analysis can make it nearly impossible to form an appropriately testable hypothesis. Furthermore, it may be difficult to know how your questions fit into the context of a field and what is actually useful to advance treatment and prevention if you are not a domain expert of the cancer or disease that you are studying. By working together in multidisciplinary teams we can determine the best hypotheses to advance science. Domain experts can help to ensure that the question is feasible from a standpoint of data collection, that it leads to other important questions, that it is new, that it is useful, and that the plan to test it will actually lead to interpretations that are useful. Informatics experts can help to ensure that the question is feasible from as standpoint of data collection and data analysis, that a question is testable, and that it leads to the interpretations that the domain experts hope to gain. 2.2.4 Be specific Give and ask for specific feedback. If your collaborator/employee/student says something that you do not quite understand, ask them for more specific clarification. In addition, give feedback that is specific where possible without assuming knowledge that might be necessary and avoid jargon. For example, if a collaborator simply states that the number of samples would be underpowered, this might not be enough information for you to help solve the issue. Ask for clarification about why with response questions, such as “you believe that the sample size is too small to allow for specific statistical text XYZ to be utilized to identify if there are differences between the XYZ groups?”. 2.2.5 Be compassionate Consider the stage of the project and how your discussions may impact your coworker. For example, pointing out that there is not enough data to do what your collaborator had hoped during later stages of the project can be very disappointing as it is often not possible to collect new data. Being polite and considerate when you make suggestions can make a major difference. Furthermore, suggesting an idea about how the project can still be productive can save your collaborator/coworkers/students stress and heartache. They may not be aware that there is public data available or additional data in your lab that can still save the project. 2.2.6 Keep contact Regular communication continues the momentum of a project and ensures that important details get discussed when necessary. It also relieves anxiety among coworkers by keeping everyone aware of the status of the project and helping to start discussions if someone needs help. 2.2.7 Schedule extra time As a project continues, new challenges will arise that will again require more time for teaching one another about the scientific process specific to your domain. Build in breathing room in the project schedule where possible, to allow for time for setbacks. Keep in mind that you may be unaware of the setbacks that you may encounter for work outside of your expertise. Creating a situation that is less stressful makes it easier for everyone to maintain positive relationships. We will discuss this more in the next chapter. In summary, we suggest that you follow these tips when communicating with your multidisciplinary team: 2.3 Record Keeping Practices Once you have your project rolling, it is important to keep good records of your work, your collaborators work, and your communication. Keeping good records takes time and discipline but it can save you more time and heartache in the end. Here are some suggestions for how to optimize your record keeping. 2.3.1 Keep organized records of work Record and communicate notes about your data collection and analyses. Be mindful of overwhelming your coworkers, but generally speaking provide extra information where possible. The more people aware of details about what samples were in what batch, the more likely important details are not missed or forgotten. For example if you are sending data to a collaborator send as much information as possible about how it was generated in the email in which you send it to them, even if you have already discussed the data. This can help ensure that no important details fall through the cracks. The best way we think you can do this in general is to use reports - one of our next suggestions. 2.3.2 Keep organized records of communication Besides recording your work, keep a record of your communications. Organize your emails for projects into a separate folders with easily recognizable titles to save yourself hassle later when something comes into question. 2.3.3 Use reports Instead of sending informal short emails (which are useful at some points in a workflow), we suggest intermittently sending lab reports with as much information about what was done and why as possible. For informatics related work in R or Python (or other supported languages) we highly suggest using a method like R markdown or Jupyter notebooks to track what informatics steps you have performed and why. Beginning these reports with a short description of what raw data you used and when you received it can be critical for ensuring that you are using the correct data! We will describe more about how to use such reports in the final chapter of this course. It is also important that the experimental biologists make similar reports defining what reagents they used, when the performed the study, what samples were used, who performed the experiment, and any notes about usual events, such as the electricity went out during the experiment, left the samples overnight but usually leave two hours, mouse #blank unexpectedly died so we lost this sample thus it is not included, or the dye seemed unusually faint in this gel. In summary, we recommend the following record keeping tips: 2.4 Leadership best practices In this section we will describe best practices for lab leaders leading multidisciplinary informatics teams to support their research team members. The section is based on a famous blog post (Watson 2013) called “The lonely bioinformatician” that describes the angst that informatics personnel often feel when they are the only person in their lab with their skill set. The blog post author, Professor Mick Watson at the University of Edinburgh, describes these individuals as “pet bioinformaticians” in his blog called opiniomics. He states: “it is possible they [the pet bioinformaticians] will become isolated and pick up bad practices as they don’t have a senior bioinformatician to guide them. It also concerns me that their career and profesional development might suffer.” He also acknowledges the challenges of the opposite case: “Consider the opposite situation – how many bioinformatician PIs manage lab staff? How could we possibly guide a young post doc on how to run gels, PCRs etc nevermind more complicated laboratory SOPs?” He has since then stated for the PIs of experts who do not share the same skill-sets: “Just look after them, and recognise you can’t give them everything that they need.You can give them a lot, just not everything.” “Secondly, there is nothing wrong with being a pet bioinformatician – it can be a really stimulating role, and opens your eyes to lab-based science. I am not criticizing the pets either, I just urge you to look after yourselves.” And ultimately provides a guide for the “pet bioinformaticians” that can be useful for both informatics expert employees/mentees and also for leaders of such individuals as well as for informatics lab leaders who employ lab-based scientists. Extending the major themes from his guide and from his post about clinical labs (Watson 2014) here are guidelines for multidiciplinary research lab leaders: 2.4.1 Recognize that different disciplines require deep expertise Informatics is truly it’s own scientific discipline that requires deep expertise. To truly optimize the multidisciplinary work that you may wish to perform, you need expert level experience of all disciplines on your team. Although you may be able to learn how to use a particular tool to seemingly test an hypothesis, this may not be correct or optimal in every instance. This is why you need expert level informatics team members to help you with your research. If you can’t hire such an individual, or even if you hire a more junior informatics mentee or employee, you need to discuss your research with a senior informatics expert. 2.4.2 Avoid employee isolation If possible, employ more than one domain expert or at least collaborate heavily with others - especially those with experience working with human data. Alternatively hire a more senior expert (with expertise studying in the domain you intend) with a higher salary. In Mick Watson’s words: “I am aware of a few lone bioinformaticians working in clinical labs. I want to make this clear – this is a bad idea. In fact, it’s a terrible idea. Through no fault of their own, these guys will make mistakes. Those mistakes may have dire consequences if the data are then used to inform a treatment plan or diagnosis.” In any case, we highly encourage guideline #2 regardless of what option you choose. 2.4.3 Encourage relationships with others in their domain Enable and encourage your employee to cultivate relationships with others who have similar skill-sets at your institution or local community. Ideally, help your employees or mentees find a mentor within their domain. If there is no local group of such individuals, see if your employee would be interested in starting one - such as a seminar group or journal club. Also encourage them to join online forums and attend conferences and workshops. Examples include: - R ladies for support for using Bioconductor or R programming. Many of the members are also very familiar with using a variety of genomics and imaging data. You do not need to be a woman to get support from this organization. - Many universities have a statistical support group, check at your institution. - National Cancer Institute ((NCI) hub groups has a list of cancer specific groups such as large groups like the Informatics Technology for Cancer Research (ITCR) or location specific groups such as the African Esophageal Cancer Consortium (AfrECC) - When in doubt ask around. Ask at your institution, ask your former colleagues at other institutions, or try on social medial like twitter to find connections. 2.4.4 Encourage growth outside their domain On the other hand, it is important that you also cultivate and encourage your employee’s growth in your domain by again suggesting and enabling their participation in conferences and journal clubs on topics relevant to your lab. 2.4.5 Value their perspective about science in general Encourage feedback and discussion from all of your employees in scientific discussions. Make their input feel welcomed regardless of the topic. A fresh perspective can sometimes lead to really important insights about things that are taken for granted by experts. 2.4.6 Discuss expectations and hypotheses If your employee is helping with work for a grant, provide the proposal to them. Have a discussion with your employee about your expectations and how feasible they are, as well as to make your informatics hypotheses specific. Avoid projects where the informatics goals are vague. Also remember that many informatics tasks may take more time than you anticipate and your employee may have a better sense of how long something will take (or vice verse if you are an informatics expert employing lab scientists). Be clear with your employee in these discussions that you are unclear about how long tasks will take, if that is indeed the case. Continue to have open dialogue about expectations and goals as the work proceeds. 2.4.7 Advocate authorship and idea generation for all Regardless of your emloyees’ or students’ backgrounds, make sure you advocate for authorship for each of them (particularly if they are interested in a career in research). According to a recent report about computational biology: Despite the fact that dramatic advancements have been driven by computational biology, too often researchers choosing this path languish in career advancement, publication, and grant review. (Carpenter et al. 2021) It is often overlooked, but Informatics experts will also need first author papers. Although keep in mind that in some fields authors are listed in different ways. Allow your employees to generate ideas for such publications and discuss this with them. Often the work to help with other projects may not be as interesting for your employee as an idea that they come up with themselves. Often you can create one technical paper and one biological paper from each project. For technical papers, allow your lab members that largely do informatics to play a prominent or leadership role. For biological papers, ask them to play a supporting role. For experimental lab members do the opposite. Allow these lab members to have a prominent role on biological papers and a supporting role on more technical papers. If nothing else, even if your employee is very busy on work for mid-level authorship, give them time to write a review or a software paper for a simple package, or a comparison of informatics methods. Mick Watson suggests making sure that your employees are authoring ~2 first author publications a year if possible. If necessary you can front-load collaboration work and then give your employee more time later to spend on their own work, but be careful about not protecting some of their time for their own career advancement. Also please see the Career Paths for Informatics Mentees section (coming up soon) and read it with your employees in mind, as well. 2.4.8 Check on them! Most importantly, make sure that your employee is getting help and feedback from other experts in their domain. It can be easy for your employee to get stuck or go in the wrong direction if left in isolation. How can you do this? Keep tabs on what they are doing in general, if they are still working on the same issue for an extensive amount of time, suggest that they seek help. Also by encouraging the relationships with experts you will provide them with the opportunity to ask others for their thoughts. 2.4.9 Get external review of work Particularly in informatics, we can especially track our steps. Make sure that your employees are keeping detailed records about their work and then get them to regularly ask for feedback from others. We all make mistakes, it’s good to get external feedback early and often to ensure that the work is correct. 2.4.10 Support diverse teammate work schedules One other important thing to know is that informatics work is often best performed with long stretches of uninterrupted time to allow your informatics employees to perform “deep work”. Why is this? Some of the challenges that your informatics teammates will be working on will require a great deal of abstract thinking and troubleshooting. Such difficult work profits well from deep concentration. How can you accommodate this? Try to work with your informatics teammates when you schedule lab meetings and be mindful of other time commitments they might have, such as classes, seminars, or other meetings. On the other hand, if you are an informatics expert mentoring experimental biologists, keep in mind that their experiments will dictate their schedule. Impromptu meetings may be difficult for them at times. Also be aware that some of their experiments may require that they stay late at night or come in very early. Thus on those days, it might be best to not overburden them with other tasks if you want them done well. References "],["informatics-project-guideliness.html", "Chapter 3 Informatics Project Guideliness 3.1 Identifying good informatics questions 3.2 Informatics project pitfalls 3.3 Informatics project pitfall mitgation methods", " Chapter 3 Informatics Project Guideliness 3.1 Identifying good informatics questions Once you have identified your research team, your next step is to start thinking more deeply about the specific informatics questions you would like to evaluate. Be sure to include team members of each discipline in these discussions. There are many important considerations to keep in mind when asking an informatics question: We suggests the following steps to take a great scientific question and make into a great informatically testable question. 3.1.1 Steps for forming questions Start with what you know and determine what is unknown Clarify what is most important to learn about what is unknown. What key information would lead to more understanding? What would be most helpful to know to lead to a new treatment or prevention strategy? What would lead to more questions? Narrow down what is unknown into specific statements based on what you identified as important to know from step 2. Write the unknown statements into specific questions. (Look out for vague phrases!) Make the questions into actionable tests by thinking about what would be measured or observed and ultimately what your variables would be in a statistical test. Make a mock-up of what the data would look like. (Do you have any necessary controls?) Evaluate if that actionable test can be assessed with statistical methods and if you have access or can collect the necessary data. Rework as necessary, possibly returning to a different question from step 5. Think about possible biases or confounders. Evaluate if the interpretation of the test would provide the insights that you are interested in. For example, say we were interested in identify new diagnostic biomarkers for colerectal cancer. Note: this is only an illustrative example. These suggestions are based on that of: Wang (2019) 3.1.2 STEP 1 First we would identify what is known and unknown: Several potential blood-based biomarkers have been identified, however many are lacking evidence due to the previous studies having small sample sizes. [source] You might ask how useful are these biomarkers for diagnosing colorectal cancer? So now we think about what is unknown: You know the sizes of the previous samples that have assessed these biomarkers and you know the level of sensitivity reported by previous reports. However, it is unknown how sensitive and specific some of these biomarkers are with sufficient sample sizes. It is unknown how collectively these biomarkers help to identify patients with cancer. It is unknown which biomarkers are more important. It is unknown which biomarkers or combinations are particularly useful for determining disease progression or what treatment options might be best. 3.1.3 STEP 2 Step 2 then involves determining which unknowns are the most important to you. This could be what is more translatable to aiding better diagnostics in a noninvasive way. This could be to better understand cancer progression and what these biomarkers tell us about patient prognosis. Determine what unknowns best fit your interest/expertise. Let’s say that we want to know what is most translatable to aiding diagnostic tests now. 3.1.4 STEP 3 Step 3 then involves writing out specific statements for what is unknown related to making these biomarkers more useful for tests now. It is unknown how useful many of these biomarkers are individually for the diagnosis of colerectal cancer in larger samples. It is unknown if combining these biomarkers together is useful in diagnosis colerectal cancer. It is unknown if combining these blood-based screens with other screens is useful. You can probably imagine many more statements but we will keep this example simple. 3.1.5 STEP 4 Step 4 involves transforming these into questions: How useful are these biomarkers for the diagnosis of coleretal cancer? How useful is the combination of these biomarkers for the diagnosis of colerectal cancer? How useful is the combination of any of these biomarkers with other non-blood-based screens? Look for terms of phrases that our vague in your questions and make them more specific. For simplicity purposes we will stick with only the second question. The phrase “How useful” can be more specific. Does a combination of the detection of these biomarkers improve diagnostic sensitivity for colerectal cancer than single biomarkers alone? Ok that’s getting better! 3.1.6 STEP 5 Step 5 is to transform questions into actionable tests. For a question to be testable it must meet several requirements. We need to have variables that can be measured or observed. We need to have a variable we can modify or control and we need to figure out what we cannot control. Now what are our variables, what can we control or observe? We will be observing diagnostic rates of colerectal cancer and biomarker expression, and we can modify or control how many biomarkers we choose to focus on to compare samples. This leads to many questions: Should we compare one biomarker vs all of the biomarkers? Which single biomarker will we choose to compare to or will we look at all of them? Do we have the sample sizes to allow for the statistical power for so many tests? How will we look at the combination of biomarkers? A total score? Will it be additive or something more complicated? For example we could prioritize some biomarkers over others. These are good questions to ask an informatics expert about. However we are getting to a more testable question. Now let’s really think about what the data we would need and what it would look like. Which brings us to step 6 where we create a mock-up of the data. 3.1.7 STEP 6 Creating a mock-up of the data can make you ask yourself more questions about what you are asking and what you need to ask that question. Would it be that we have blood results for these biomarkers for patients where we know based on surgical pathology if they have cancer? What would these blood results look like? Would it be absolute expression levels of mRNA or protein? Do we have a threshold of elevated expression that we can use? Will we assign samples as yes or no in terms of meeting this threshold or will we use an absolute quantity or relative percentage over this threshold? Actually creating a mock-up of what the data might look like can reveal other important aspects that you may not yet have thought about. Thus here is the result of step 6. 3.1.8 STEP 7 Step 7 is then to think about what statistical tests you might perform. Could we use a t-test to compare the scores among the patient groups? Would we want to account for other factors like the patients age or gender? Would another test be better? 3.1.9 STEP 8 Step 8 is then to think about what this would mean. What would it mean if our results showed a difference in score between the groups? What can we interpret? Do we want to be able to predict patient status? This may involve moving back a step or two. Remember that working with your research teammates can help you to come up with a better research plan before you start collecting data. By involving experts from different domains you can make the most out of your research efforts. We would also suggest that you work with your informatics experts to come up with a biological research question or set of questions and a more technical question for each project. This can be a good strategy to ensure that everyone in your team gets authorship and that your team is being as productive as possible. For this example, your informatics employees or students might write a paper using simulated data or publicly available data to look at methods for creating biomarkers scores. Their studies could better inform you about how to think about testing the utility of colerectal biomarkers for diagnosis purposes. 3.2 Informatics project pitfalls One common misconception is that informatics research projects work out more often or are faster than wet bench experimental research projects. This is however not necessarily true and informatics projects are just as likely to fail and often take more time than one might expect. However, one advantage of having an informatics team member on a project is that there is ample free data available to add to or shift or reframe a study if necessary. This is important to keep in mind when advising your mentees and guiding the planning of their projects. Common reasons why an informatics project might fail: The goals were too vague (see the previous section about identifying good informatics questions) Sadly this happens quite often and it can easily lead informatics employees and mentees down the wrong path. The data is not of high enough quality or lacks consistency This may be do to a faulty method, methodological differences between lab personnel, expired reagents, temperature differences on data collection days, or aging of a machine over time etc. Some of these issues can be avoided or reduced, while others are unavoidable. Do not be quick to blame your experimental research team members if the data does not look like you expect. Some variation in data is just a part of life. There is not a strong enough signal in the data to detect the effect of interest with the current data/methods This is also a very common problem if you are not sure what the strength of the effect you are looking for might be (which is often the case in Biology). In this case you need more data or methods with greater granularity. The method of data collection becomes obsolete This may not make the project fail per se but can make publication difficult. Staying on top of what methods are currently being used can help to avoid this. The signal does not exist Sometimes our hypotheses are just wrong. 3.3 Informatics project pitfall mitgation methods This section is in part based on a book (Robinson and Nolis (2020)) by Emily Robinson and Jacqueline Nolis. We can mitigate some of these project weak points. (You may notice how some of these have been discussed previously.) However some of these are a bit unavoidable and it is best to have realistic expectations and flexibility about backup project ideas. Ways to mitigate project failure: Discuss with experts Discuss with trusted experts across all necessary domains about your informatics hypotheses to make sure they are feasible with the data you have or will generate before you get too far down the research path. Ask for their help to make sure that your scientific questions are not too vague. Do this as early as possible. Diversify projects It is a good idea to diversify your mentees’ and employees’ projects to enable them to have exposure to different projects, as well as more opportunities to contribute to a project that will ultimately result in a product such as an academic paper or a new software package. Safe project planning Make sure mentees and employees have at least one very solid project. For example, assign a review article, a simple software package, or a project with very promising pilot data. Co-authorship Allow lab members (especially mentees) to work together on projects. Assign one mentee or employee as the main personnel, but allow other team members to contribute in small ways to allow them to at least get co-authorship, just in case their main projects fail. Plan for ample time Plan for projects to have adequate time to account for setbacks. For example, if possible plan on the possibility that additional data may need to be collected or perhaps more data will need to be added from a data resource. It will take additional time to analyze the new data. Unfortunately, simply plugging in new data to an existing script hardly ever works. Instead the following tasks are required: Check the quality of the new data Reformat/wrangle the new data to match that of the existing data Evaluate how different the new data is from the old data - are they similar enough to be included in a larger analysis or does this require two analyses? Perform the analysis on the new data Adjust and reframe When a project appears to fail because the data turns out to not be adequate for answering your original question, reframe the project to answer a question that the data actually can answer. For example, if the goal of a project was to look for differential gene expression of a single gene and no significant difference is found, consider evaluating the gene expression of a pathway or network of genes that are involved in the same biological process. It is best to be transparent about your scientific process in your publications. Get new data In the worst case that the data does not appear to work for your initial goal and reframing the question does not seem possible, look for new data. Now there are many data resources available online. We have curated a list of cancer research related data with the help of the National Cancer Insitute (NCI) Informatics Technology for Cancer Reserach (ITCR) faculty. These are also good resources for finding cancer related data: - The cBioPortal - This article Keep in mind that using new data takes time. Using an existing script on new data rarely works because data can be formatted differently and have other intrinsic differences. This must first be evaluated to know how to proceed. The following steps are required: Overall we will summarize our suggestions for avoiding project pitfalls. References "],["informatics-relationships.html", "Chapter 4 Informatics Relationships 4.1 Cultivating Good Multidisciplinary Lab Relationships 4.2 Collaborating with Informatics Experts 4.3 Employing informatics experts 4.4 Mentoring informatics students", " Chapter 4 Informatics Relationships 4.1 Cultivating Good Multidisciplinary Lab Relationships Now that we know a bit more about general practices for maintaining successful multidisciplinary teams and projects, we are going to take a deeper look at how to best support the relationships that might we might have in our team. We will also discuss the pros and cons of each type of relationship to better guide you about decisions regarding building your team. 4.2 Collaborating with Informatics Experts Studies investigating biology research labs over history indicate that collaboration has been on the rise since the 1950s (Vermeulen, Parker, and Penders 2013) and that the rate continues to increase (Sonnenwald 2007). Indeed the size of biology research teams appear to have doubled from 1955 to 1990 (Vermeulen, Parker, and Penders 2013). But why? 4.2.1 The benefits of collaboration Shared cost - Research often involves expensive technology, thus it is cost effective to share resources. Shared expertise - Now that technology affords answering in some cases more complex or broader research questions, it is often more effective to employ multiple contributors with different knowledge, skills, and perspectives. Researchers have noted that their own concept of their field changed as a result of working with investigators from other disciplines. Thus this can lead to innovation (Mäkinen, Evans, and McFarland 2020). Shared burden - Doing part of the work for a project using the knowledge and skills that you are most comfortable with and seeking help from others who are more knowledgeable on other research aspects can be a more efficient strategy. Shared reliability - Including multiple team members who can each evaluate the research can improve the reliability of a project, as mistakes can be found by other members. Shared credibility - Collaborations involving experts of multiple areas can improve the perceived credibility of the work by others. 4.2.2 Potential Challenges There are always challenges when collaborating with others, but some of these are particularly enhanced in multi-disciplinary teams. Here are some challenges that you may encounter when a collaboration involves informatics experts. Bad collaboration: Communication Differences - Extra care needs to be taken to ensure that communication across groups is effective. Typically researchers will not meet as often with a collaborator as they would with an internal team member. Therefore, poor communication in a collaboration can lead to more costly misdirection and thus wasted time and effort. Furthermore, as investigators often have different backgrounds, differences in jargon and language can make communication more challenging. Having internal team members with some familiarity with informatics can be very beneficial for translating discussions with collaborators who are informatics experts. One solution to this is to have trainees work in both labs. This can be especially beneficial for the trainee who will become accustomed to two research styles and will learn a diverse set of skills, allowing them to potentially have their own multi-disciplinary lab in the future (Mäkinen, Evans, and McFarland 2020). Another important method that can help resolve this issue is to have members provide educational seminars for participating members about the fundamentals of their work. Different research style and goals - Beyond differences in language, differences in research style and goals can lead to conflict. “Scholars’ different styles of thought, standards, research traditions, techniques, and languages can be difficult to translate across disciplinary domains.” (Mäkinen, Evans, and McFarland 2020) Making clear research standards and goals, as well as outlining clear specific tasks at the beginning of a project can help to avoid this issue. Furthermore, meeting consistently throughout the duration of a project can also help to make sure that standards are maintained. Additionally, these meetings should include discussions about intellectual property, authorship, leadership, and defining what success looks likes to each of the various members. Defining these details early can avoid major conflict later. Furthermore, it is critical to keep in mind the diversity of career goals of research team members, as junior team members may have a challenging time persuading others of their independence and contributions when they work on largely collaborative projects. It is also necessary to ensure that junior members have time to devote to their own research programs. (Sonnenwald 2007) Support should be provided for these junior collaborators by more senior collaborators. Different capabilities - Research of multi-disciplinary collaborations has revealed that when collaborating members are unclear of how their expertise and work contributes to the project, they are less motivated and fell less valued. Working with members of different backgrounds to determine how their expertise can contribute to the project, as opposed to simply assigning them a task, will not only help with morale, but it can also better define how a collaborator can further contribute to a project in ways that you may not already expect (Mäkinen, Evans, and McFarland 2020). Reduced sense of responsibility - Another concern of collaboration is that team members may feel less responsibility or commitment to a project than for a project within their own lab. Defining tasks and expected due dates can help reduce this issue. Discussions to establish due dates should always include team members with expertise in each area of science, as tasks may not take the amount of time that another researcher would expect. It is a common misconception that informatics tasks take less time than the tasks actually take in reality. Research is dynamic - Research always has an element of trial and error. Protocols may change and new scientific questions may emerge. Frequent meetings with all group members to understand the dynamics of the project are critical. Furthermore, flexibility and understanding is required. It should be expected that aspects about the project will change. Different levels of resources - Particularly when collaborating with community members, community colleges, and institutions that are “Equity-oriented” serving populations that have historically been marginalized or “minoritized” (Blake 2017), it is important to keep in mind that large differences in resources may exist between collaborating members. Sharing and discussing budget information early and often can help research members to understand what expectations are reasonable and how collaboration partners may best assist one another. It is also important to recognize that: &gt; There is a common misconception that the lack of physical experimentation and laboratory supplies makes analysis work automated, quick, and inexpensive. (Carpenter et al. 2021) However: In reality, even for well-established data types, analysis can often take as much or more time and effort to perform as generating the data at the bench. Moreover, it typically also requires pipeline optimization, software development and maintenance, and user interfaces so that methods remain usable beyond the scope of a single publication or project. Don’t forget to provide some budget for your inforomatics collaborators, as their time ultimately does cost money and there may be computational costs that you may not be aware of. 4.3 Employing informatics experts In contrast to collaborating with informatics experts, in some case it may be beneficial to directly employ them on your team. There are again pros and and cons for this strategy. By directly employing informatics experts, rather than collaborating with an expert, research leaders will have more access to meet with these experts more often. Research leaders may also have more sway in terms of guiding the direction of the experts’ work. Leaders can also potentially grow the informatics part of their research program more readily, leading to even more flexibility in the research questions that they may be able to assess. However, direct employment of informatics experts requires all of the typical responsibilities and costs of employing another lab member. It also requires the additional resource requirements for the informatics work of the particular expert. This will be discussed more in a later section of this course. In addition, it is useful to become familiar with best practices for ethics, reliability, and reproducibility in computational work. This requires some different tactics than that of experiment based research (often called “wet lab” research). Although it is also useful for informatics experts to keep track of the work that they have performed in general, similar to maintaining notes about experimental research with a lab notebook, a much deeper level of detail can be tracked and maintained for computational work. What we mean by this, is that the actual code and data used in their work can be saved over time. This can be invaluable for research reproducibility. Thus research leaders are advised to become familiar with best practices for data sharing and data management so that they can most effectively manage their informatics employees. This is also discussed in more detail later in the course. Furthermore, it is very important to avoid issues that can happen if you employee a single bioinformatician that will be isolated from other informatics experts. One other important thing to remember is that informatics work is often best performed with long stretches of uninterrupted time. This will be true for your informatics employees and mentees. Again we suggest that you work with your informatics teammates when you schedule lab meetings and be mindful of their other time commitments. Try to support them in scheduling several hours of uninterrupted time a day if possible. 4.4 Mentoring informatics students Mentorship is a particularly unique relational experience. While traditional mentorship has been defined by the hierarchical structure of a single mentor who teaches subordinate mentees, new styles have emerged that are not as constrained or limited as the traditional paradigm. At its optimum, mentors and mentees should learn from each other and together and expand what each can do alone. Importantly the more traditional paradigm that does not value “reciprocal learning” as highly, has been shown to be less effective for a larger diversity of students.(Mullen and Klimaitis 2021) For research groups that are newer to informatics, some of these less traditional paradigms may be especially useful, we will focus on a few here. 4.4.1 Co-mentoring/Collaborative/team mentoring As we described earlier, co-mentoring or collaborative mentoring of students by multiple mentors with different backgrounds can be particularly beneficial to the student and also to the partnering labs. In the case of collaborative mentoring where a mentee is mentored by two research experts in two different labs, this provides an opportunity not only to strengthen a collaboration, but also for students to gain more diverse knowledge, and to in turn provide more of the expertise that they gain back to both labs. Co-mentoring could also occur within the same lab by a research leader and an informatics expert. This could also work well in a multilevel paradigm, where an informatics expert may guide informatics related aspects of research, while an overarching research adviser may guide the student’s overall research mentorship experience. 4.4.2 Peer mentoring Peer mentoring also provides great opportunities to expand students’ expertise and skills without as much time constraints for the research leaders of a lab, particularly for skills that may be new to lab leadership. Furthermore, such paradigms are helpful for improving students’ teaching skills, collaboration skills, self-reliance, and self-confidence. Teaching a peer is often useful for students to identify gaps in their own knowledge, and assisting in their quest to “learn how to learn” (Mullen and Klimaitis 2021). Furthermore, such paradigms appear to be especially beneficial to students of historically marginalized populations (Mullen and Klimaitis 2021). However, there are challenges for research leaders from a management standpoint. Mentors should be mindful of any conflicts that may arise between students. These can often be avoided with clear and distinct goals and projects for students, to avoid making students feel like they are competing with one another. Additionally, we highly recommend establishing a code of conduct for the lab, so that students and staff members are clear about what behavior is expected. 4.4.3 Electronic mentoring With the COVID-19 pandemic, the transition to using electronic means of contact with students and staff for research has expanded on an unprecedented scale. It is unclear currently how much this will continue in the future. However, research prior to the pandemic has shown some surprising benefits of providing mentorship through electronic means. Importantly it appears that this eases burdens for students who are balancing course work, as it often provides more scheduling flexibility. Additionally, such mentorship is particularly helpful for historically marginalized populations who may face more hostility by going to research institutes with face-to-face interaction with others or may have additional scheduling conflicts. Even as we may return to more on-site research labs, additional availability by mentors with mentees using electronic means of contact are likely to be beneficial. Technology such as slack can be especially useful for allowing lab members to interact with one another. We will cover more about this soon. 4.4.4 Career goals The job landscape for scientists has changed in recent decades with more opportunities outside academia in industry and government. Furthermore career goals for informatics mentees can be very different than that of other research mentees. By having informatics expertise, these trainees have additional career opportunities. Becoming aware of these opportunities yourself, as a research leader, is therefore critical for cultivating your mentees’ awareness of the diversity of opportunities available to them. This will ultimately allow your mentees to choose the career path that suites them best. 4.4.4.1 Career Paths for Informatics Mentees Academia - Your informatics mentees may have career opportunities as principal investigators, scientists, or educators just like other cancer biology mentees. In addition to opportunities as educators for informatics and biology, they will also have opportunities for data science. Government - Your informatics mentees will may have career opportunities as scientist or policy maker for research institutes just like other cancer biology mentees. However, additional agencies and institutes may have a need for their data science skills on topics outside of biology. For example your mentee may have the skills to work for a city police department. Industry - Beyond the potential career options in the pharmaceutical industry, biotech, and medicine, your informatics mentees will have data science skills that may qualify them for jobs in a variety of industries. For example your informatics mentees could find jobs at companies such as Stitch Fix or Ancestry which use methods in machine learning and bioinformatics for their products. Additionally, your mentee may also have opportunities to join a software company as a computer programmer or even as a programming educator at a company like RStudio. Nonprofit - Beyond research and management positions at nonprofits performing scientific or clinical research, informatics mentees may have opportunities at other nonprofits with other types of goals. For example, your mentee might find work at a nonprofit that advocates for civil rights and investigates social interactions in social media platforms. 4.4.4.2 Career Paths outside of Academia If your mentee is more interested in a career path outside of academia we suggest you read up about industry perspectives on useful skills and knowledge, so that you are better prepared to guide your mentees to get exposure and experience to the data science domains or aspects that would be most helpful to them. According to Brandon Rohrer, a data scientists who formerly worked at Facebook and now works at iRobot, there are 4 major categories of knowledge and skills for data science: Data Analysis - domain knowledge, research skills, and interpretation skills Data Modeling - machine learning application skills, algorithm development skills Data Engineering - data management skills, skills to make code production-level ready (ex. automation), software engineering Data Mechanics - data formatting and cleaning, data handling (filtering, subsetting) Based on these categories, he says that there are also 3 major archetypes for data scientists: Beginner data scientists - he recommends exposure in each of the 4 areas. This is ideally how your mentee will be after training at a minimum if their goal is to pursue a data science career. This will allow them to identify their strengths. Generalist - proficient in all areas - this is helpful for becoming a data science manager or executive - These are also good aspects to focus on for mentees who wish to stay in research! Specialists Detective - strong skills in data analysis and mechanics and exposure in all 4 areas - may be especially useful for nonprofits Oracle - strong skills in modeling and mechanics - this is great for working at companies using machine learning Maker - strong sills in mechanics and engineering - this would make your mentee valuable for working in any of the nonacademic fields as well as academia Check out this video for more details: From another perspective, the major skill sets to focus on according to the “Build a Career in Data Science” book by Emily Robinson and Jacqueline Nolis (Robinson and Nolis (2020)) are: Statistics Machine learning Programming (python and R) Projects - hands on experience Promoting your mentee’s exposure to each of these domains can only help them further pursue a career in Data Science. We also suggest that your mentees checkout this blog post on surviving data science interviews also by Branden Rohrer. We think this could be helpful for mentees pursuing any data science career path, however it is especially useful for those interested in industry. 4.4.4.3 Academia for informatics mentees So how do we best support informatics students that want to stay in Academia? Recognize that academic promotion for informatics experts is currently not very accommodating. Some aspects of traditional academic promotion are simply not set up to accommodate informatic experts. For example, these individuals tend to publish many more secondary author publications and create software which can reduce the time they have available for first author publications. However, first author (or last) author papers are still most often used as the major guideline for academic achievement. How can you and your mentees overcome this? Be sure to especially advocate for your student to get first authorship papers if they intend to stay in academia. Wherever possible also try to advocate for more nuanced academic promotion polices that account for multidisciplinary differences at your institution. Encourage your student to seek specialized technical skill sets For your students who wish to stay in academia, it may be less important that they become as generally familiar with a wide variety of data science skills and practices as students interested in a career in industry, if they are for example instead focusing on a specific statistical method. Just like other academic fields, informatics experts will become experts in niche subject areas. Encourage these students to go to targeted conferences to build a network in their field of interest (although we still encourage if possible to allow your students to get a well-rounded exposure to different types of conferences). Also especially encourage these students to learn about grantsmanship just as you would with your other academic mentees. However this can also be useful for students interested in workinf for a nonprofit or for the government. See Carpenter et al. (2021) and Waller (n.d.) for a more in-depth discussion and suggestions on how to reform academic promotion practices to be more mindful of disciplinary differences for informatics experts. 4.4.4.4 Authorship Considerations There are also additional types of papers that your informatics mentee can publish, including: Data resource papers, where your mentee may publish an article introducing a data resource Software papers - an article where the functionality and development of piece of software is discussed When guiding your mentee through the publication process, it is a good idea to keep in mind their career goals as you prioritize different paper ideas. For example a mentee that is interested in pursuing a data engineering career may benefit more from a software paper than other mentees. References "],["promoting-diversity.html", "Chapter 5 Promoting Diversity 5.1 Diversity is Beneficial 5.2 Underrepresentation in Cancer Informatics 5.3 Ways to better support a more diverse research team", " Chapter 5 Promoting Diversity 5.1 Diversity is Beneficial Beyond the critical importance of giving everyone more fair opportunities (which cannot be overstated), there are many additional crucial reasons why diversity is particularly important for science and health research. The inclusion of diverse research team members promotes more inclusive research questions and practices to help the populations that need better health care the most. “Racial/ethnic minority groups in the United States are at disproportionate risk of being uninsured, lacking access to care, and experiencing worse health outcomes from preventable and treatable conditions.”(Jackson and Gracia 2014) “…Compared with the general population, racial/ethnic minority populations have poorer health outcomes from preventable and treatable diseases, such as cardiovascular disease, cancer, asthma, and human immunodeficiency virus/acquired immunodeficiency syndrome than those in the majority.”(Jackson and Gracia 2014) “… the social environment in which people live, learn, work, and play contributes to disparities and is among the most important determinants of health throughout the course of life.”(Jackson and Gracia 2014) More diverse research teams may be more aware of the cultural differences and social determinants that may influence the health of the people that the research could serve. Such consideration could further increase the impact of the research. The inclusion of diverse populations in scientific teams has also been shown to improve innovation (Hofstra et al. 2020). “Scholars from underrepresented groups have origins, concerns, and experiences that differ from groups traditionally represented, and their inclusion in academe diversifies scholarly perspectives. In fact, historically underrepresented groups often draw relations between ideas and concepts that have been traditionally missed or ignored.” (Hofstra et al. 2020) 5.2 Underrepresentation in Cancer Informatics However, analyses of scientific article authorship indicate that women are underrepresented in computational biology (Bonham and Stefan 2017) and biomedical engineering (Aguilar et al. 2019). Furthermore, analyses of university faculty and students demonstrate that both women and historically marginalized populations (such as Black, Hispanic, and Native American) remain underrepresented in science, technology, engineering, and mathematics (STEM) fields in the US and in Europe (Hofstra et al. 2020; Chaudhary and Berhe 2020). 5.3 Ways to better support a more diverse research team In order to best support and encourage mentees and employees of underrepresented groups in cancer informatics, we suggest that lab leaders do the following: 5.3.1 Seek additional training about disparities in informatics and STEM careers Especially focus on hindrances to achievement such as attitudes, biases, and stereotypes. Also, become aware of stereotype threat - “an internal feeling and concern about confirming a negative stereotype associated with a group (e.g., racial, ethnic, gender, and age) with which the individual identifies”(Stelter, Kupersmidt, and Stump 2021) and how they might influence your mentees. Here is a great video of Russell McClain at the University of Maryland that introduces how implicit bias and stereotype threat impact higher education: Note that you may not be aware of all the barriers of achievement that your mentees may face. For example, mentees from low socioeconomic backgrounds, mentees with disabilities, mentees who have immigrated, older mentees, mentees of traditionally underrepresented races and ethnic groups, and mentees with gender identities that are underrepresented face unique and sometimes overlapping challenges. It is also important to learn about how intersectionality (the idea that some individuals may represent more than one underrepresented group (ex. female and black)) results in more nuanced challenges. For example: When the intersection of race/ethnicity and gender is considered, women of color report even less access to mentorship and support from mentors than other groups. (Davis et al. 2021) Here is a great video of Kimberlé Crenshaw at UCLA and Columbia describes the theory of intersectionality, which she developed: Also, become aware of microaggressions - “subtle verbal and nonverbal slights, insults, or invalidating remarks directed at individuals due to their membership in a group (e.g., racial, ethnic, gender, sexual orientation, age, and physical disability), which are rooted in biases about individuals in that group”(Stelter, Kupersmidt, and Stump 2021). See below a list of examples: [Source] Importantly, “mentors for students with disabilities should receive training, as needed, on their mentee’s specific disability and should be made aware of the accommodations that students may need to succeed in activities and courses” (Stelter, Kupersmidt, and Stump 2021). 5.3.2 Acknowledge mentee’s differences Research shows that mentees of underrepresented racial groups would prefer their mentors to directly discuss their background differences and how to best cultivate the mentee’s career success given their background. An attitude of “color-blindness” about race has shown to hinder the success of mentees (Byars-Winston et al., n.d.; Holoien and Shelton 2012). Talk with your team members individually (be careful not to single out individual team members in front of the rest of the lab) about how they would like to discuss the potential influences on their career growth. “Racial/ethnic differences between mentees and mentors in interracial mentoring relationships can pose cultural barriers to effective mentoring of HU (Historically underrepresented) students and even affect students’ professional and psychosocial success, especially when complex racial/ethnic issues are not effectively handled or addressed…” (Byars-Winston et al., n.d.) “Two ideological perspectives – colorblindness and multiculturalism – have emerged to shed light on this question. Colorblindness downplays the salience and importance of race by focusing on the commonalities people share, such as one’s underlying humanity. In contrast, multiculturalism acknowledges and highlights racial differences (Holoien and Shelton 2012).” “Exposure to colorblind (vs. multicultural) messages predicts negative outcomes among Whites such as greater implicit and explicit racial bias (Richeson &amp; Nussbaum, 2004)” (Holoien and Shelton 2012) “[Underpresented groups] benefit when others around them endorse multiculturalism (Plaut et al., 2009)”(Holoien and Shelton 2012) 5.3.3 Work to create a safe environment Educate lab mentors about cultural sensitivity and microaggressions. Highlight the importance of collaboration and create a code of conduct for the lab to demonstrate that respect among lab members is expected and required. 5.3.4 Diverse role models Expose all mentees to a diverse range of role models through seminars, journal clubs, and participation in conferences. Computational biology papers with female authors are more likely to have a last author is also female. It is unclear if this is because women are more likely to hire other women and or if females are more likely to choose a lab with a female adviser (Bonham and Stefan 2017). Indeed, research of females and other underrepresented groups in STEM including students with disabilities and of certain racial and ethnic groups suggests that role models of underrepresented populations are particularly important for recruiting and keeping students interested in fields where they may feel like an outsider (Stelter, Kupersmidt, and Stump 2021). One strategy to encourage students of underrepresented populations is to provide students with exposure to such role models through regular seminars where scientists who represent these populations are prominent (Katz 2007). 5.3.5 Advocate for all mentees Introduce your mentee to other scientists and trainees particularly those from underrepresented groups. Encouraging the participation of your mentees in support programs and groups such as graduate student groups. Help mentees cultivate self advocacy practices through open discussions and encouragement. 5.3.6 Support a healthy relationship with failure Be a good role model and openly discuss the role of failure in research. For example, you may describe failures in your own career or you may read some of the book Brilliant Blunders by Mario Livio or this article about the book with your mentees. This book describes how scientific advancement actually occurred due to mistakes of some of the most respected scientists. Educating mentees about the Growth Mindset described by Carol Dweck may also be helpful. The major themes of this mindset is an awareness that our abilities are not fixed, that we can change our aptitudes with practice and work. [source] 5.3.7 Celebration and microaffirmations Be sure to celebrate all of your mentees’ small and large successes. This has been shown to promote confidence and resilience (Stelter, Kupersmidt, and Stump 2021). Be generous complementing or pointing out small success in discussions with your mentees and thank your mentees for performing tasks that they may assist you or your lab. For larger successes, consider sharing a meal or other social activity with your lab. For virtual or remote lab members this could be playing a game online. Again aim to do this with all your mentees/lab members. Be mindful about not singling out particular mentees. This could further make such lab members feel like they don’t belong. 5.3.8 Give feedback with cultural sensitivity It is important to be aware that your mentee may be struggling with feeling like they don’t belong when you provide feedback (Stelter, Kupersmidt, and Stump 2021; Lee, Dennis, and Campbell 2007). Thus, when given criticism, certain mentees who may especially feel like they don’t belong because of their background differences, may feel very discouraged. Try to still be encouraging when delivering criticism by acknowledging what is going well and what is progressing. This article has several good tips for delivering criticism that we will summarize here with our own thoughts: Allow for a discussion about what went wrong. You may learn that your mentee struggled for an entirely different reason than you expected. Having a discussion allows you to better determine how your mentee might be able to perform better in the future. Give criticism in a sandwich. Say something positive, deliver the criticism, then say something else positive. Focus on the actions instead of personality traits. Think about how they can improve. For example, instead of saying “You seem to have time management issues”, you could say something like, “Navigating and prioritizing all these projects is a difficult task and I think we can do better as a team.” Be specific and suggest improvements. You want your mentees to know exactly what they should be aiming to improve and why. Vague criticism may reduce their confidence and will not help them improve as much as concrete specific suggestions and discussion. Deliver criticism in private. Especially if your mentee is feeling like they don’t belong, criticism in front of other lab members can really impact their confidence. It can also lead to more unhealthy competitive dynamics between lab members. Don’t surprise your mentees with criticism. Build criticism into regular meetings with your mentee. Don’t create a meeting out of the blue to tell them they need to improve as this may cause excess stress. Secondly, criticism can be normalized if it is delivered gently and in the ways we just outlined. 5.3.9 Consider creating a document of mentor and mentee expectations. These documents help clarify what mentees can expect. This allows is helpful for your mentees to better perform according to expectations, as they are explicitly stated rather than intuited. [source] Masters and Kreeger (2017) has created a nice set of guidelines for such documents. Also see here for more information about such documents. Keep in mind that such forms should be tailored for different career stages of your mentees and for mentees who are pursuing different expertise. Informatics mentees should incorporate guidelines about data management practices. We will discuss a bit more about that in the next chapter. References "],["informatics-lab-management-tools.html", "Chapter 6 Informatics lab management tools 6.1 Slack 6.2 How to use slack? 6.3 Features 6.4 Git and GitHub 6.5 Docker 6.6 Figshare 6.7 RStudio and R Markdown 6.8 Jupyter 6.9 Conclusion", " Chapter 6 Informatics lab management tools There are several tools that can be especially useful for assisting with day-to-day management of projects involving informatics regardless of if you are simply collaborating with an informatics expert or you are leading an informatics research team. 6.1 Slack Slack is a communication tool that allows you to communicate with lab members much more efficiently than email. It is a bit like a combination of an instant message system, email, and dropbox. You can do quite well with the free version of slack. It may be all that your research group needs indefinitely. The major difference between the free version and the paid versions is that the free version does not save all of your message history. Currently, with the free version you can search through the history of the last 10,000 messages. From our experience using this with a department with about 250 users, it takes about a year to reach this threshold. If you choose to go with the free option and share any really important messages or files, make sure to save them just in case. 6.2 How to use slack? 6.2.1 Workspaces The main landing page for slack is called a workspace, which looks like this: In the above image, this person has five workspaces which are indicated by the squares on the far left. Each workspace allows for multiple channels for communicating. These channels can include all members of the workspace or specific subsets of members. Team members can also have separate direct messages to have one-on-one discussions. It’s a good idea to check if your department or institute is already using slack. If so, they may have a workspace that you can join. Otherwise you may want to think about recruiting your department or institute to start using slack. In this case you could start a workspace where people outside your research group can communicate. This would still allow you to have group messages with your lab or specific groups within the lab. Otherwise, you can start a workspace just for your research group. 6.2.2 Channels Channels are the main way in which you can converse with your team on slack. We recommend making a slack channel for your entire research group. Everyone in your group will be able to discuss something by sending messages in real time. If someone is not available at that time, they will see the message when they next check slack. We also recommend making project specific channels. For these channels you can add all of the team members working on a specific project, so that they can easily discuss and review discussions about the project. Importantly, you can make channels private or public. If a channel is public, anyone in the workspace can join. 6.3 Features 6.3.1 Pins If someone sends a really important message, like a link to a relevant document, you can “pin” the message so that it is easier to find later. Hovering over a message you will get the following options: Clicking on the 3 dot button allows you to do several useful things for a message including pinning it to find it easily later. 6.3.2 Code One great feature about slack, is that it is very convenient to message about code. You can also attach files directly to messages just like in the above message which has a screen shot image file. 6.3.3 Reminders If you want to be reminded about a message in 20 minutes or next week you can also do that using the same hovering and 3 dot button option. leanbuild::include_slide(&quot;https://docs.google.com/presentation/d/1OU5qeRgN_fojGbcyu2qEdwlcKpDO6BveWtYW_u1Hqd4/edit#slide=id.gd93234bdfa_0_53&quot;) Thus if Jack gets a message from his advisor Charlie, but he is busy doing deep work on something else, he can ask Slack to remind him later. You may also notice in the image above that your messages can be edited! unlike an email, in addition yoou can mark them as unread, which can also be useful for responding to messages asynchronously. 6.3.4 Polls One other nice feature for working with a team is that you can directly poll your team. Say sally wants to schedule a meeting with the lab teammates for a specific project- this could even include collaborators who are outside of the lab. If all the users are on the same Slack channel, she can send out a poll like this one asking people to resond with times that they are available. 6.4 Git and GitHub You can learn more about these tools in the Data Management course, however we will give a brief introduction now. Informatics work can especially benefit from keeping track of your steps and the code that you have used. In some cases your lab may use a tool like Galaxy which has built in options for keeping track of the steps that your lab members are taking during their research. However, other tools do not have this option. Instead, we can use a tool called Git which allows for something called “version control”. Version control is the tracking of changes to a file or files overtime. This is equivalent to saving different versions of a grant proposal overtime. However, as you may have noticed, this is not an easy process to maintain. Tools like Git (Git is one of the most popular) help us to keep track of changes. If we save our changes often, we can easily modify our files back to a recent version if necessary. This may be less useful for a grant proposal (although we would argue that it really can be!), but it can be absolutely critical for your informatics code. Why is this? Small changes in your code may result in your code breaking or generating completely different results. To make matters worse, sometimes your scripts may be lengthy, if you have 4,000 lines of code, it can be difficult to identify what is different between one version and another. Git really helps with this. So what is GitHub? GitHub is a free hosting site for code (or other files - including those grant proposals!). Therefore, all the different versions of your files can be saved and accessed online at GitHub. You can make these files private or public. According to Wikipedia: As of January 2020, GitHub reports having over 40 million users and more than 190 million repositories (including at least 28 million public repositories), making it the largest host of source code in the world. You do not have to use GitHub to use Git. If you have data that needs to be complaint with HIPPA, you could still use Git on a local server (more on this in other courses). Alternatively, you could use GitHub after you de-identify your data. See here for info about ways to use GitHub for data that needs to be HIPAA compliant. We recommend this tutorial if you are interested in using Git and Github with R. 6.5 Docker If you have multiple team members modifying code for the pipeline or the software, or if you ultimately want to share your pipeline or software, it is recommended that you use a method to ensure that you (as well as you in the future!) and your team and anyone you want to share your pipeline or software with uses the same dependency software of the same versions! There are a few ways to do this, but one of the simplest is to use what is called Docker. You might be familiar with something called a virtual machine. A virtual machine basically allows you to perform operations on your computer, but as if you are using a different computer! This is handy because you can ensure that you not only have similar software installed but you are also working with the same operating system as your teammates (even if your computer has a different operating system). For example you might have a mac, and your teammates might all have windows machines. Pretty cool, right!? Docker is similar to this, except it uses what is called a container. This allows users to work with software that is preinstalled and an environment that is preconfigured, however it uses part of your existing operating system. This is good because it means that it takes less time and resources than using a virtual machine, which includes a full copy of a virtual operating system. Here is the explanation about what containers are on the docker blog: A container is a standard unit of software that packages up code and all its dependencies so the application runs quickly and reliably from one computing environment to another. A Docker container image is a lightweight, standalone, executable package of software that includes everything needed to run an application: code, runtime, system tools, system libraries and settings. See here and here to read more about the differences between virtual machines and containers like Docker. Note that you can use Docker containers within a virtual machine. See here for explanations about host and guest operating systems. In short the host operating system is the local machines operating system (the one with the hardware), the guest operating system is the virtualized operating system. Finally, see here for a deeper explanation about how Docker images and containers work. Like GitHub, there is a DockerHub, where people store different docker images (which is what allow people to run a docker container with all of your software dependencies and configurations on their machine).You can download other people’s docker images, or you can host your own on DockerHub for other people to use your Docker images. The important take-home message is that Docker fixes the issue of having your code work only on your machine but not someone elses. 6.6 Figshare Similar to GitHub, Figshare is another option for hosting and sharing files on the internet that is specifically designed for research related files. Users can host data, code, images, posters, papers, and other types of files to allow others to easily find resources related to your research. In their words: Figshare is a repository where users can make all of their research outputs available in a citable, shareable and discoverable manner. We make it as simple as possible to make research Findable, Accessible, Interoperable and Reusable (FAIR) Publish research in any file format and assign an institutionally-branded DOI, document with customizable, discipline-specific metadata, [create] discoverable content across major search engines and academic frameworks The difference with GitHub is that it is easier to make files citable (thus ensuring better that you get credit) and it also is a bit easier to store large data files. Figshare does not however have the same version control capabilities of Git and GitHub. Ultimately Figshare is a great place to share final versions of your research products to make them findable for others. Figshare also encourages researchers to publish negative findings that did not ultimately end up in publications to reduce redundancy in the research field, which we think is a great idea! 6.7 RStudio and R Markdown If your research teammates are using the R programming language often, we strongly suggest that you consider having these teammates use what is called R Markdown to create reports of their analyses. R Markdown is a flavor of what a markup language called Markdown that works especially well with R. What do we mean by markup? A markup language is for formatting text particularly to make it text that can be distinguished form the rest of a document. In our case we want it to look different from our code and the output of our code. Ideally for the sake of reproducibility and transparency, we recommend that your informatics teammates write such R Markdown reports as they are performing their analyses - not afterwards. RStudio is an Integrated Development Environment or IDE for developing code that makes it easy to write such reports. R markdown files make it easy to have a report that shows a bit of the data (or all the data if your data is very small), the code, commentary about what the code is doing, as well the actual output of the code for a given informatics process. We also recommend describing what data you are using, who performed the analysis and when and why, all in one document. This really helps with troubleshooting in the future, as well as simplifying maintaining code over time. It also makes it easier to train new lab members or communicate to collaborators how your code works. The really nice thing about these reports is that Markdown languages allows you to export them in a variety of formats like html websites, pdfs, word documents (or even slide presentations with just a bit of extra work) that can easily be shared with others. You aren’t limited to just writing about code in these reports. You can write about anything. In fact, what you are reading right now was orginally written using R markdown. Thus this is also a good option for writing up reports about wet bench experiments as well. 6.7.1 R Markdown Guidelines There are a few simple syntax rules for R &lt;arkdown. To create headers you can specify them using hashtags. One hastag # is the largest header option, while two ## is a bit smaller, three ### is a bit smaller than two ## etc. Thus you could create a header like so: # This is a header To create bold text you can use asterisks around the text. **This is bold text** Which will look like this: This is bold text To create italicized text you can use two asterisks around the text. *This is italicized text* Which will look like this: This is italicized text To create both bold and italicized text you can use three asterisks around the text. ***This is bold and italicized text*** Which will look like this: This is bold and italicized text To create a new line you include two spaces after the end of the line. To create a divider line you can use three astrix without any text on a line by itself. *** Which will look like the following divider line: You can also embed images or videos into your R markdown reports. There are several ways to do this with a package called knitr which allows you to do all sorts of things with your reports. However you can also do it simply with the following syntax: ![caption text](URL_or_local_path_to_image_or_videofile) If you are including code (which can be R programming language code, Python, SQL, bash or others). You can specify it using three backticks like this: ```{r} some R code ``` Here is some actual R code that displayed in the html output from the original R Markdown file. There is a slightly darker background for code and for code output. You will see that the result of x is printed right after a break: # This is a code comment about some R code- here comes the code on the next line! x &lt;- c(1,2,3,4,5) x ## [1] 1 2 3 4 5 Similarly this is some Python code and output: # Now we are going to show some python code x = [1,2,3,4,5] print(x) ## [1, 2, 3, 4, 5] For inline code (meaning you can show the output within some narrative text) you can use one backtick around the code starting with r to specify that you are using the R programming language like this: ` r x ` This will result in: Here is the output: 1, 2, 3, 4, 5 Another important thing to know is that you can utilize what are called child Rmd files in case your report is getting to large (something that often happens with analyses). In this case, you can separate out parts of your research process into different report documents and have an additional report document that demonstrates the entire process. See here for more information on how to do this. If you want a quick reference check out this guide For a more extensive guide check out this article from R Studio. Also see Riederer (n.d.) for additional information about how to use and create R markdown files. For advanced users check out R Notebook, which is an extension of R Markdown. 6.8 Jupyter Jupyter notebooks are very similar to R markdown reports, however they were designed with an emphasis on using Python rather than R and such reports are created using a web-based editor rather than software on your local computer. The Markdown syntax used in Jypter notebooks is nearly the same as what you just learned about for R Markdown. Here you can see a quick guide. See here for an extensive guide, where you might notice some differences in terms of how to include code. JupyterLab is also similar to Rstudio. However it is a web-based environment for working with code and writing Juptyer notebooks. You can try some demos here. 6.9 Conclusion Overall we think that these tools can be helpful to you and your informatics research team. There are however many other tools that can help with informatics analyses. We will discuss these in other courses about data reprodcubility and management. References "],["about-the-authors.html", "About the Authors", " About the Authors Carrie Wright is an Assistant Scientist in the Department of Biostatistics at the Johns Hopkins Bloomberg School of Public Health (JHSPH). Dr. Wright is a member of the Johns Hopkins Data Science Lab (DaSL), the Open Case Studies team, and the Informatics Technology for Cancer Research (ITCR) Training Network (ITN). Dr. Wright’s work is focused on innovating ways to make data science and computational biology more accessible to audiences of varied computational experience. She is also interested in improving community engagement in academia. You can learn more about Dr.Wright at https://carriewright11.github.io/. "]]
